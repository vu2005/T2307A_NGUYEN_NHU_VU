// <auto-generated />
using BattleGame.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BattleGame.Migrations
{
    [DbContext(typeof(BattleGameContext))]
    partial class BattleGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("BattleGame.Models.Asset", b =>
                {
                    b.Property<string>("AssetId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("LevelRequire")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssetId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            AssetId = "1",
                            AssetName = "Sword of Light",
                            LevelRequire = 5
                        },
                        new
                        {
                            AssetId = "2",
                            AssetName = "Shield of Darkness",
                            LevelRequire = 3
                        },
                        new
                        {
                            AssetId = "3",
                            AssetName = "Potion of Health",
                            LevelRequire = 1
                        });
                });

            modelBuilder.Entity("BattleGame.Models.Player", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = "1",
                            Age = 25,
                            Email = "alice@wonderland.com",
                            FullName = "Alice Wonderland",
                            Level = 10,
                            PlayerName = "Alice"
                        },
                        new
                        {
                            PlayerId = "2",
                            Age = 30,
                            Email = "bob@smith.com",
                            FullName = "Robert Smith",
                            Level = 15,
                            PlayerName = "Bob"
                        },
                        new
                        {
                            PlayerId = "3",
                            Age = 28,
                            Email = "charlie@chaplin.com",
                            FullName = "Charles Chaplin",
                            Level = 8,
                            PlayerName = "Charlie"
                        });
                });

            modelBuilder.Entity("BattleGame.Models.PlayerAsset", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetId")
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId", "AssetId");

                    b.HasIndex("AssetId");

                    b.ToTable("PlayerAssets");

                    b.HasData(
                        new
                        {
                            PlayerId = "1",
                            AssetId = "1"
                        },
                        new
                        {
                            PlayerId = "2",
                            AssetId = "2"
                        },
                        new
                        {
                            PlayerId = "3",
                            AssetId = "3"
                        },
                        new
                        {
                            PlayerId = "1",
                            AssetId = "3"
                        });
                });

            modelBuilder.Entity("BattleGame.Models.PlayerAsset", b =>
                {
                    b.HasOne("BattleGame.Models.Asset", "Asset")
                        .WithMany("PlayerAssets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleGame.Models.Player", "Player")
                        .WithMany("PlayerAssets")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BattleGame.Models.Asset", b =>
                {
                    b.Navigation("PlayerAssets");
                });

            modelBuilder.Entity("BattleGame.Models.Player", b =>
                {
                    b.Navigation("PlayerAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
